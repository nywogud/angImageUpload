package com.jhl.ngImage.controller;

import java.io.File;
import java.io.IOException;
import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.jhl.ngImage.service.Sort3Service;
import com.jhl.ngImage.vo.DataVO;
import com.jhl.ngImage.vo.PagingVO;

@Controller
public class HomeController {

	@Inject
	Sort3Service service;

	private static final String FILE_SERVER_PATH = "D:/img";

	@RequestMapping(value = "/favicon.ico", method = RequestMethod.GET)
	public void favicon(HttpServletRequest request, HttpServletResponse reponse) {
		try {
			reponse.sendRedirect("/resources/favicon.ico");
		} catch (IOException e) {
			e.printStackTrace();
		}

	}

	@RequestMapping(value = "/", method = RequestMethod.GET)
	public String home(PagingVO pagingVO, Model model,
			@RequestParam(required=false, value="nowPage") String nowPage,
			@RequestParam(required=false, value="cntPerPage") String cntPerPage	
			) throws Exception {
		//기본 화면에서 sort3 이미지 페이징 처리 나열
		int total = service.totalImag();
		
		
		List<DataVO> imgList = service.selectAll();
		model.addAttribute("imgList", imgList);
		return "main";
	}

	@RequestMapping(value = "/sort3Upload", method = RequestMethod.POST, headers = ("content-type=multipart/*"))
	public String sort3Upload(@RequestParam("file") MultipartFile file, DataVO dataVO, Model model) throws Exception {

		// 로컬에 파일 저장
		file.transferTo(new File(FILE_SERVER_PATH, file.getOriginalFilename()));

		//data 객체에 이미지 이름 세팅
		dataVO.setImgName(file.getOriginalFilename());

		//이미지 정보 디비 저장
		service.insertImgInf(dataVO);
		//커밋
		service.doCommit();
		//이미지 리스트 가져오기
		List<DataVO> imgList = service.selectAll();
		model.addAttribute("imgList", imgList);
		
		return "sort3";
	}
}
